plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' // version '1.0.0'
}

group 'com.example'
archivesBaseName 'UniminedExampleMod'
version '1.0-SNAPSHOT'

// this is just here so we can test the outputs easier and clean between tests
unimined.useGlobalCache = false

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

sourceSets {
    babric {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    modloader {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

tasks.register("babricJar", Jar) {
    from sourceSets.babric.output, sourceSets.main.output

    archiveClassifier = "babric"
}

tasks.register("modloaderJar", Jar) {
    from sourceSets.modloader.output, sourceSets.main.output

    archiveClassifier = "modloader"
}

repositories {
    mavenLocal()
    maven {
        url "https://maven.wagyourtail.xyz/releases"
    }
    mavenCentral()
}

unimined.minecraft() {
    version "b1.7.3"
    side "client"

    mappings {
        babricIntermediary()
        barn(9)
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }
}

unimined.minecraft(sourceSets.babric) {
    version "b1.7.3"

    mappings {
        barn(9)
    }

    babric {
        loader "0.14.19-babric.1"
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }
}

unimined.minecraft(sourceSets.modloader) {
    version "b1.7.3"
    side "client"

    mappings {
        babricIntermediary()
        barn(9)
        stub.withMappings(["searge", "mcp"]) {
            c("ModLoader", "net/minecraft/src/ModLoader", "net/minecraft/src/ModLoader")
            c("BaseMod", "net/minecraft/src/BaseMod", "net/minecraft/src/BaseMod")
        }
    }

    jarMod {

    }
}

repositories {
}

dependencies {
    modloaderJarMod "risugami:modloader:b1.7.3"
}


processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }

    filesMatching("mcmod.info") {
        expand "version": project.version
    }
}